---
title: 'Topics Models'
author: "Sumit Sinha"
date: "`r Sys.Date()`"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

For this assignment, you will use the same data as the Factor Analysis assignment to discover the important topics in U.S. Governors' tweets about the pandemic. The dataframe for the assignment includes four columns - State, Name, and Party of Governor plus the Text of their tweets. The Text column is the one you should process and analyze.

## Load the libraries + functions

Load all the libraries or functions that you will use to for the rest of the assignment. It is helpful to define your libraries and functions at the top of a report, so that others can know what they need for the report to compile correctly.

Load the Python libraries or functions that you will use for that section. 

```{r}
##r chunk
library(reticulate)
library(tm)
library(topicmodels)
library(tidyverse)
library(tidytext)
library(slam)
```

```{python}
##python chunk
import string
import pyLDAvis
import pyLDAvis.gensim  # don't skip this
import matplotlib.pyplot as plt

import gensim

import gensim.corpora as corpora

import nltk
from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer 
ps = PorterStemmer()
```

## The Data

```{r data}
##r chunk
df = read.csv("Gov Tweets Clean.csv")
head(df)
```

## Gensim Modeling in Python

Transfer the df['Text'] to Python and convert it to a list for processing. 

```{python}
##python chunk
df = list(r.df["Text"])
```

Process the text using Python. 

```{python}
##python chunk
##create a spot to save the processed text
processed_text = []

##loop through each item in the list
for text in df:
  #lower case
  text = text.lower()
  #remove punctuation
  text = text.translate(str.maketrans('', '', string.punctuation))
  #create tokens
  text = nltk.word_tokenize(text) 
  #take out stop words
  text = [word for word in text if word not in stopwords.words('english')] 
  #stem the words
  text = [ps.stem(word = word) for word in text]
  #add it to our list
  processed_text.append(text)

processed_text[0]
```

Create the dictionary and term document matrix in Python.

```{python}
##python chunk
#create a dictionary of the words
dictionary = corpora.Dictionary(processed_text)

#create a TDM
doc_term_matrix = [dictionary.doc2bow(doc) for doc in processed_text]
```

Create the LDA Topics model in Python using the same number of topics as used in the Factor Analysis assignment. 

```{python}
##python chunk
lda_model = gensim.models.ldamodel.LdaModel(corpus = doc_term_matrix, #TDM
                                           id2word = dictionary, #Dictionary
                                           num_topics = 6, 
                                           random_state = 100,
                                           update_every = 1,
                                           chunksize = 100,
                                           passes = 10,
                                           alpha = 'auto',
                                           per_word_topics = True)
```

View the Topics:

```{python}
##python chunk
print(lda_model.print_topics())
```


Create the interactive graphics `html` file. Please note that this file saves in the same folder as your markdown document, and you should upload the knitted file and the LDA visualization html file. 

```{python}
##python chunk
vis = pyLDAvis.gensim.prepare(lda_model, doc_term_matrix, dictionary, n_jobs = 1)
pyLDAvis.save_html(vis, 'LDA_Visualization.html') ##saves the file
```

## Interpretation

Interpret your topics and compare to MEM themes with PCA. Explain the results from your analysis (at least 5 sentences). 
  
ANSWER: In the Factor Analysis assignment, I found that 6 theme solution is the best fitting solution based primarily on interpretability (lower Root mean square of the residuals, smaller root mean squared error of approximation, tucker lewis index closer to 1). I labeled those 6 themes as below:
Theme1 = news media & weather
Theme2 = Family & social life
Theme3 = Actions
Theme4 = Health (COVID) & Medicine
Theme5 = Quarantine & Social Distancing
Theme6 = Mixture of Theme 4 & 5

But looking at the topics generated by the LDA model, looks like a 6 topics model was a way overkill since there are so many terms that overall across the 6 themes. Based on the LDA visualization plot, these 3 themes seems to cover all the tweets.
Theme1 (Topics #1 in 6 topic LDA solution) = Covid19 overall in the country
Theme2 (Topics #4 in 6 topic LDA solution) = Covid19 in Ohio
Theme3 (Topics #5 in 6 topic LDA solution) =  Mexico and New Mexico Health 

The topics #2,3 in the LDA seems to overlap completely with the topics #1, whereas topic #6 does not seem to capture anything. Topics #2 and 3 seem to be targeted at specific states, but still not as targeted as theme 2 is to Ohio.

